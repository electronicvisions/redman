#!/usr/bin/env python
import os
try:
    from waflib.extras import symwaf2ic
    from waflib.extras.gtest import summary
    recurse = lambda *args: None  # dummy recurse
except ImportError:
    from gtest import summary
    from symwaf2ic import recurse_depends
    recurse = lambda ctx: recurse_depends(depends, ctx)


def depends(ctx):
    ctx('redman')
    ctx('redman', 'test')  # build tests by default
    ctx('pygccxml')
    ctx('pyplusplus')
    ctx('pywrap')


def options(opt):
    recurse(opt)
    opt.load('compiler_cxx')
    opt.load('pytest')
    opt.load('python')
    opt.load('pypp')
    opt.load('boost')


def configure(cfg):
    recurse(cfg)
    cfg.load('compiler_cxx')
    cfg.load('pypp')
    cfg.load('python')
    cfg.load('pytest')
    cfg.load('boost')

    cfg.check_boost(lib='python serialization', uselib_store='BOOST4PYREDMAN')


def build(bld):
    recurse(bld)

    bld(
        target       = '_pyredman',
        features     = 'cxx cxxshlib pyext pyembed pypp',
        source       = bld.path.ant_glob('*.cpp'),
        install_path = '${PREFIX}/lib',
        use          = [
            'BOOST4PYREDMAN',
            'redman',
            'Coordinate',
        ],
        headers      = 'bindings.h',
        gen_defines  = 'PYPLUSPLUS __STRICT_ANSI__',
        script       = 'generate.py',
        output_dir   = 'redman_bindings'
    )

    bld(
        target          = 'pyredman',
        features        = 'use py',
        use             = '_pyredman',
        source          = bld.path.ant_glob('pyredman/**/*.py'),
        install_from    = 'pyredman',
        install_path    = '${PREFIX}/lib/pyredman'
    )
